import crypto from "crypto";
import dotenv from "dotenv";

dotenv.config();

const authenticateShopifyWebhook = async(req, res, next) => {
  console.log(await req.json());
  const hmacHeader = req.get("X-Shopify-Hmac-Sha256");

  if (!hmacHeader) {
    return res
      .status(401)
      .json({ response: "error", message: "Access denied. No token provided. for shopify" });
  }

  try {
    const apiSecret = process.env.API_SECRET;
    if (!apiSecret) {
      throw new Error("API_SECRET environment variable is not set");
    }
    const bodyBuffer = Buffer.isBuffer(req.body)
      ? req.body
      : Buffer.from(
          typeof req.body === "string" ? req.body : JSON.stringify(req.body),
          "utf8"
        );
    const generatedHmac = crypto
      .createHmac("sha256", apiSecret)
      .update(bodyBuffer) // req.body must be raw buffer
      .digest("base64");

    if (generatedHmac === hmacHeader) {
      return next();
    }

    return res
      .status(401)
      .json({ response: "error", message: "Access denied. Invalid token." });
  } catch (error) {
    return res
      .status(400)
      .json({ response: "error", message: "Error validating request.", error });
  }
};

export default authenticateShopifyWebhook;
