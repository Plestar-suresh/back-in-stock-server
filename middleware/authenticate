import crypto from "crypto";
import dotenv from "dotenv";

dotenv.config();

const authenticateShopifyWebhook = (req, res, next) => {
  const hmacHeader = req.get("X-Shopify-Hmac-Sha256");

  if (!hmacHeader) {
    return res
      .status(401)
      .json({ response: "error", message: "Access denied. No token provided." });
  }

  try {
    const rawBody = req.body;
    if (!rawBody) {
      return res.status(400).json({ message: "Invalid request body." });
    }

    const generatedHmac = crypto
      .createHmac("sha256", process.env.API_SECRET)
      .update(rawBody) // Use the raw buffer
      .digest("base64");

    if (generatedHmac === hmacHeader) {
      // It's valid, now you can parse the body for the next handlers
      req.body = JSON.parse(rawBody.toString('utf8'));
      return next();
    }


    return res
      .status(401)
      .json({ response: "error", message: "Access denied. Invalid token." });
  } catch (error) {
    return res
      .status(400)
      .json({ response: "error", message: "Error validating request." , error});
  }
};

export default authenticateShopifyWebhook;
